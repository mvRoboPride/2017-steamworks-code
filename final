#include <WPILib.h>

/**
 * This is a demo program showing the use of the RobotDrive class.
 * The SampleRobot class is the base of a robot application that will automatically call your
 * Autonomous and OperatorControl methods at the right time as controlled by the switches on
 * the driver station or the field controls.
 *
 * WARNING: While it may look like a good choice to use for your code if you're inexperienced,
 * don't. Unless you know what you are doing, complex code will be much more difficult under
 * this system. Use IterativeRobot or Command-Based instead if you're new.
 */
class Robot: public frc::SampleRobot {
	frc::RobotDrive myRobot { 0, 1 };  // robot drive system
	frc::Joystick stick { 0 };  // only joystick
	frc::Spark sparkDrive { 2 };
	int autoLoopCounter;
	//CameraServer server;

public:
	Robot() {
		//myRobot.SetExpiration(0.1);
		//CameraServer::GetInstance()->StartAutomaticCapture();
	}

	void Autonomous() //is called autonomous init in iterative file
	{
		autoLoopCounter = 0;
			while (autoLoopCounter < 600)   //Drive automatically times
			{
				autoLoopCounter++;
				myRobot.Drive(-0.5,0.00006);   // Start motor
				frc::Wait(0.005);
			}

			myRobot.Drive(0.0,0.0);  //Stop moving forward after loop has reached the given time
	//	}
	}

	void autonomousPeriodic()
	{
		sparkDrive.Set(1);
			if (autoLoopCounter < 2000)   //Drive automatically times
			{
				autoLoopCounter++;
				myRobot.Drive(1.0,1.0);
				frc::Wait(0.005);
			} else {
				myRobot.Drive(0.0,0.0);  //Stop moving forward after loop has reached the given time
			}
	}

	/**
	 * Runs the motors with arcade steering.
	 */
	void OperatorControl() {
		//server.GetInstance();
	//	server.StartAutomaticCapture("", 0);
		while (IsOperatorControl() && IsEnabled()) {
			myRobot.ArcadeDrive(stick); // drive with arcade style (use right stick)
			if (stick.GetButton(frc::Joystick::ButtonType::kTopButton)) { //b
				sparkDrive.Set(1);
			} else
			if (stick.GetButton(frc::Joystick::ButtonType::kTriggerButton)) { //a
				sparkDrive.Set(-1);
			}
				else {
					sparkDrive.Set(0);
				}
			frc::Wait(0.005);	// wait for a motor update time
		}
	}
};

START_ROBOT_CLASS(Robot)
